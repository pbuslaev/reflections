How did viewing a diff between two versions of a file help you see the bug that was introduced?

- You can easily see the positions where the changes were introduce and concentrate on them

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

- You can check out all your thoughts abouts the project and you will never do the same mistake twice

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

- Your commits are logical - you can understand what has been done and why
- But you can forget to commit

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, theat each file separately?

- Git is code oriented. You can use different libs and introduce changes in different files simultaniously (like html and css files)

- Google docs is text oriented - you just introduce one logical part in one document. No dependencies are kept in mind

How can you use the commands git log and git diff to view the history of files?

- With git log - I can see the history of the commits. When changes were introduced and a short description of them.

- With git diff I can compare 2 different commits.

How might using version control make you more confident to make changes that could break something?

- You can detect the commit where the bug was introduced.

Now that you have your workspace set up, what do you want to try using Git for?

- For effective coding

- For manuscript preparation

